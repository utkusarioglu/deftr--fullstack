version: "3.8"

services:
  webclient:
    image: node:alpine
    container_name: deftr--webclient
    restart: unless-stopped
    stdin_open: true
    ports:
      - 80:3000
    volumes:
      - ./api:/usr/home/app/api
      - ./webclient:/usr/home/app/webclient
    networks:
      - frontend
    working_dir: /usr/home/app/webclient
    command: "yarn start"

  server:
    image: node
    container_name: deftr--server
    restart: unless-stopped
    ports:
      - 4000:4000
    networks:
      - frontend
      - backend
    volumes:
      - ./api:/usr/home/app/api
      - ./server:/usr/home/app/server
    depends_on:
      - postgres
      # - redis
    working_dir: /usr/home/app/server
    command: "yarn start:dev"

  # redis:
  #     image: redis
  #     container_name: deftr--redis
  #     ports: 
  #       - 6379:6379
  #     # privileged: true
  #     restart: unless-stopped
  #     hostname: redis
  #     networks:
  #       - backend
  #     volumes:
  #       - ./server/mounts/redis/config/redis.conf:/usr/local/etc/redis/redis.conf
  #       - ./server/mounts/redis/scripts:/scripts
  #       - redis-data:/data
  #     command: bash -c "/scripts/init.sh"

  postgres:
      image: postgres
      container_name: deftr--postgres
      hostname: postgres
      ports: 
        - 5432:5432
      networks: 
        - backend
      restart: unless-stopped
      volumes:
        - postgres-data:/var/lib/postgresql/data
      environment:
        POSTGRES_USER: exampleuser
        POSTGRES_PASSWORD: examplepass
        POSTGRES_DB: exampledb

volumes:
  postgres-data: 
  redis-data:

networks:
  frontend:
  backend: